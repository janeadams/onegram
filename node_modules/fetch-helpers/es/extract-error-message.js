import _isString from "lodash/isString";
import _get from "lodash/get";

const getMessage = ex => _get(ex, "exceptionMessage", _get(ex, "message", _get(ex, "ExceptionMessage", _get(ex, "Message"))));

export default (data => {
  if (_isString(data)) return data;
  if (!data) return null; // if it is a .net exception, try to find the inner-most exception

  let ex = data;

  while (ex.innerException) {
    const origEx = ex;
    ex = ex.innerException;
    ex.outerException = origEx;
  } // try to look for a message or exception message


  let msg = getMessage(ex);

  while (!msg && ex.outerException) {
    // go back up the tree looking for more messages
    ex = ex.outerException;
    msg = getMessage(ex);
  }

  return msg;
});