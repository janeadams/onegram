"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _shallowequal = _interopRequireDefault(require("shallowequal"));

var _connect = require("./connect");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

const fetchOnUpdate = (fn, ...keys) => DecoratedComponent => class FetchOnUpdateDecorator extends _react.Component {
  componentDidMount() {
    fn(this.props);
  }

  componentDidUpdate(prevProps) {
    // if they didn't specify any keys, we effectively only run the fetch function once on init
    if (keys.length < 1) return;
    const params = (0, _connect.mapParams)(keys, this.props);
    const prevParams = (0, _connect.mapParams)(keys, prevProps);

    if (!(0, _shallowequal.default)(params, prevParams)) {
      fn(this.props);
    }
  }

  render() {
    return _react.default.createElement(DecoratedComponent, this.props);
  }

};

var _default = fetchOnUpdate;
exports.default = _default;